global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend haproxy-main
        bind *:80
        # Bind 443 with the generated letsencrypt cert.
        bind *:443 ssl crt /etc/haproxy/certs/www.olajosh.tech.pem
        # set x-forward to https
        reqadd X-Forwarded-Proto:\ https
        # set X-SSL in case of ssl_fc <- explained below
	http-request redirect scheme https code 301 if !{ ssl_fc }
        default_backend webservers

backend webservers
        balance roundrobin
        # Redirect with code 301 so the browser understands it is a redirect. If it's not SSL_FC.
        # ssl_fc: Returns true when the front connection was made via an SSL/TLS transport
        # layer and is locally deciphered. This means it has matched a socket declared
        # with a "bind" line having the "ssl" option.
        redirect scheme https code 301 if !{ ssl_fc }
        server 7422-web-01      18.206.238.207:80 check
        server 7422-web-02      44.197.196.98:80 check
